@model OrderViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Place your order</h2>

@using (Html.BeginForm("Cart", "Order", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-offset-2 col-md-2">
                <strong>Name</strong>
            </div>
            <div class="col-md-2">
                <strong>Price</strong>
            </div>
            <div class="col-md-3">
                <strong>Quantity</strong>
            </div>
            <div class="col-md-3">
            </div>
        </div>
        <div id="products">
            @for (int i = 0; i < Model.Products.Count; i++)
            {
                <div id="products_@Model.Products[i].ProductId">
                    <div class="row">
                        @Html.HiddenFor(model => model.Products[i].ProductId)
                        <div class="col-md-offset-2 col-md-2">

                            @Html.DisplayFor(model => model.Products[i].Name)
                        </div>
                        <div class="col-md-2">

                            @Html.DisplayFor(model => model.Products[i].Price)
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Products[i].Quantity, new { htmlAttributes = new { @class = "form-control, col-md-3" } })
                            @Html.ValidationMessageFor(model => model.Products[i].Quantity, "", new { @class = "text-danger" })
                        </div>


                        <div class="col-md-3">
                            <button type="button" class="btn btn-danger btn-default" onclick="RemoveFromCart(this.value)" value="@Model.Products[i].ProductId" id="removeFromCart_@Model.Products[i].ProductId"><span><i class="fa fa-minus-square"></i> Remove from Cart</span></button>
                        </div>

                    </div>
                </div>
            }
        </div>

        <br /><br />
        <section id="addressview" style="display:none">
            <div class="form-group">
                @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Province, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Province, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Place Order" class="btn btn-default btn-info" />
                </div>
            </div>
        </section>
        <br /><br />
        <button type="button" class="btn btn-success btn-default" style="float:right;margin-right:7%" onclick="ShowAddress();" id="showAddress"><span><i class="fa fa-check-square-o"></i> Proceed to Checkout</span></button><br /><br />
    </div>
}


@section Scripts{
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            if (@Model.Products.Count< 1) {
        $("#showAddress").hide();
            }
       });


    function ShowAddress() {
        $("#showAddress").hide();
        $("#addressview").show();
            }

      function RemoveFromCart(value) {
          $('#removeFromCart_' + value).hide();
          $('#products_'+value).remove();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("RemoveFromCart","Order")', // we are calling json method
                dataType: 'json',
                data: { ProductId: value },

                // here we are get value of selected country and passing same value
                //as inputto json method GetStates.

                success: function (data) {

                },
                error: function (ex) {
                }
            });

    };
    </script>

}

